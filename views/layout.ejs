<!DOCTYPE html>
<html>
  <head>
    <title><%- title|| '快巴士' %></title>

    <!-- Viewport mobile tag for sensible mobile support -->
        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    
    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `link` tags, or asynchronously
        on the client using a solution like AMD (RequireJS).  Or, if you like, you can
        take advantage of Sails' boilerplate asset management.

        By default, tylesheets from your `assets/linker/styles` folder are included
        here automatically.  Both CSS (.css) and LESS (.less) are supported.
        In production, your styles will be minified and concatenated into a single file.
        
        To customize any part of the built-in behavior, just edit your Gruntfile.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/linker/styles/bootstrap-responsive.min.2.3.1.css">
    <link rel="stylesheet" href="/linker/styles/bootstrap.min.2.3.1.css">
    <link rel="stylesheet" href="/linker/styles/main.css">
    <!--STYLES END-->
    <script src="/linker/js/jquery.min.1.7.js"></script>

  </head>

  <body>
    <div class="navbar navbar-fixed-top ">
      <div class="navbar-inner">
        <div class="container">
          <div class="brand">Quickbus@node</div>
          <ul class="nav">
            <li><a href="#">link1</a></li>
            <li><a href="#">link2</a></li>
          </ul>
        </div>
      </div>
    </div>

    <div class="container well">
      <%- body %>
    </div>

    <!--
        Client-side Templates
        ========================

    		HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/linker/templates` folder, then
        include them here automatically.
        
        To customize this behavior to fit your needs, just edit your Gruntfile.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your templates using a server-side stringfile
              before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' boilerplate asset management.

      By default, filesin your `assets/linker/js` folder are included here
      automatically.  Both JavaScript (.js) and CoffeeScript (.coffee) are supported.
      In production, your scripts will be minified and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit your Gruntfile.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/linker/js/socket.io.js"></script>
    <script src="/linker/js/sails.io.js"></script>
    <script src="/linker/js/app.js"></script>
    <script src="/linker/js/bootstrap.min.2.3.1.js"></script>
    <script src="/linker/js/jquery.min.1.7.js"></script>
    <script src="/linker/js/mapUtil.js"></script>
    <script src="/linker/js/underscore-min.1.4.4.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
